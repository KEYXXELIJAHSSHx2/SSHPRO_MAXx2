#!/bin/bash
clear
smtp_port="25,26,465,587"
pop3_port="109,110,995"
imap_port="143,218,220,993"
other_port="24,50,57,105,106,158,209,1109,24554,60177,60179"
bt_key_word="torrent
.torrent
peer_id=
announce
info_hash
get_peers
find_node
BitTorrent
announce_peer
BitTorrent protocol
announce.php?passkey=
magnet:
xunlei
sandai
Thunder
XLLiveUD"

check_sys(){
	if [[ -f /etc/redhat-release ]]; then
		release="centos"
	elif cat /etc/issue | grep -q -E -i "debian"; then
		release="debian"
	elif cat /etc/issue | grep -q -E -i "ubuntu"; then
		release="ubuntu"
	elif cat /etc/issue | grep -q -E -i "centos|red hat|redhat"; then
		release="centos"
	elif cat /proc/version | grep -q -E -i "debian"; then
		release="debian"
	elif cat /proc/version | grep -q -E -i "ubuntu"; then
		release="ubuntu"
	elif cat /proc/version | grep -q -E -i "centos|red hat|redhat"; then
		release="centos"
    fi
	bit=`uname -m`
}
check_BT(){
	Cat_KEY_WORDS
	BT_KEY_WORDS=$(echo -e "$Ban_KEY_WORDS_list"|grep "torrent")
}
check_SPAM(){
	Cat_PORT
	SPAM_PORT=$(echo -e "$Ban_PORT_list"|grep "${smtp_port}")
}
Cat_PORT(){
	Ban_PORT_list=$(iptables -t filter -L OUTPUT -nvx --line-numbers|grep "REJECT"|awk '{print $13}')
}
Cat_KEY_WORDS(){
	Ban_KEY_WORDS_list=""
	Ban_KEY_WORDS_v6_list=""
	if [[ ! -z ${v6iptables} ]]; then
		Ban_KEY_WORDS_v6_text=$(${v6iptables} -t mangle -L OUTPUT -nvx --line-numbers|grep "DROP")
		Ban_KEY_WORDS_v6_list=$(echo -e "${Ban_KEY_WORDS_v6_text}"|sed -r 's/.*\"(.+)\".*/\1/')
	fi
	Ban_KEY_WORDS_text=$(${v4iptables} -t mangle -L OUTPUT -nvx --line-numbers|grep "DROP")
	Ban_KEY_WORDS_list=$(echo -e "${Ban_KEY_WORDS_text}"|sed -r 's/.*\"(.+)\".*/\1/')
}
View_PORT(){
	Cat_PORT
	echo -e "\033[1;31m        PORTAS BLOQUEADAS ATUALMENTE"
	echo -e "$Ban_PORT_list" && echo && echo -e "\033[1;32m==============================================="
}
View_KEY_WORDS(){
	Cat_KEY_WORDS
	echo -e "\033[1;31m     PALAVRAS-CHAVE BLOQUEADAS ATUALMENTE"
	echo -e "$Ban_KEY_WORDS_list" && echo -e "\033[1;32m==============================================="
}
View_ALL(){
	echo
	View_PORT
	View_KEY_WORDS
}
Save_iptables_v4_v6(){
	if [[ ${release} == "centos" ]]; then
		if [[ ! -z "$v6iptables" ]]; then
			service ip6tables save
			chkconfig --level 2345 ip6tables on
		fi
		service iptables save
		chkconfig --level 2345 iptables on
	else
		if [[ ! -z "$v6iptables" ]]; then
			ip6tables-save > /etc/ip6tables.up.rules
			echo -e "#!/bin/bash\n/sbin/iptables-restore < /etc/iptables.up.rules\n/sbin/ip6tables-restore < /etc/ip6tables.up.rules" > /etc/network/if-pre-up.d/iptables
		else
			echo -e "#!/bin/bash\n/sbin/iptables-restore < /etc/iptables.up.rules" > /etc/network/if-pre-up.d/iptables
		fi
		iptables-save > /etc/iptables.up.rules
		chmod +x /etc/network/if-pre-up.d/iptables
	fi
}
Set_key_word() { $1 -t mangle -$3 OUTPUT -m string --string "$2" --algo bm --to 65535 -j DROP; }
Set_tcp_port() {
	[[ "$1" = "$v4iptables" ]] && $1 -t filter -$3 OUTPUT -p tcp -m multiport --dports "$2" -m state --state NEW,ESTABLISHED -j REJECT --reject-with icmp-port-unreachable
	[[ "$1" = "$v6iptables" ]] && $1 -t filter -$3 OUTPUT -p tcp -m multiport --dports "$2" -m state --state NEW,ESTABLISHED -j REJECT --reject-with tcp-reset
}
Set_udp_port() { $1 -t filter -$3 OUTPUT -p udp -m multiport --dports "$2" -j DROP; }
Set_SPAM_Code_v4(){
	for i in ${smtp_port} ${pop3_port} ${imap_port} ${other_port}
		do
		Set_tcp_port $v4iptables "$i" $s
		Set_udp_port $v4iptables "$i" $s
	done
}
Set_SPAM_Code_v4_v6(){
	for i in ${smtp_port} ${pop3_port} ${imap_port} ${other_port}
	do
		for j in $v4iptables $v6iptables
		do
			Set_tcp_port $j "$i" $s
			Set_udp_port $j "$i" $s
		done
	done
}
Set_PORT(){
	if [[ -n "$v4iptables" ]] && [[ -n "$v6iptables" ]]; then
		Set_tcp_port $v4iptables $PORT $s
		Set_udp_port $v4iptables $PORT $s
		Set_tcp_port $v6iptables $PORT $s
		Set_udp_port $v6iptables $PORT $s
	elif [[ -n "$v4iptables" ]]; then
		Set_tcp_port $v4iptables $PORT $s
		Set_udp_port $v4iptables $PORT $s
	fi
	Save_iptables_v4_v6
}
Set_KEY_WORDS(){
	key_word_num=$(echo -e "${key_word}"|wc -l)
	for((integer = 1; integer <= ${key_word_num}; integer++))
		do
			i=$(echo -e "${key_word}"|sed -n "${integer}p")
			Set_key_word $v4iptables "$i" $s
			[[ ! -z "$v6iptables" ]] && Set_key_word $v6iptables "$i" $s
	done
	Save_iptables_v4_v6
}
Set_BT(){
	key_word=${bt_key_word}
	Set_KEY_WORDS
	Save_iptables_v4_v6
}
Set_SPAM(){
	if [[ -n "$v4iptables" ]] && [[ -n "$v6iptables" ]]; then
		Set_SPAM_Code_v4_v6
	elif [[ -n "$v4iptables" ]]; then
		Set_SPAM_Code_v4
	fi
	Save_iptables_v4_v6
}
Set_ALL(){
	Set_BT
	Set_SPAM
}
Ban_BT(){
	check_BT
	[[ ! -z ${BT_KEY_WORDS} ]] && echo -e "\033[1;32m ${Error} TORRENT BLOQUEADO E PALAVRAS-CHAVE, NAO HA NECESSIDADE BANNIR NOVAMENTE !"
	s="A"
	Set_BT
	View_ALL
	echo -e "\033[1;32m ${Info} TORRENT BLOQUEADO E PALAVRAS-CHAVE !"
}
Ban_SPAM(){
	check_SPAM
	[[ ! -z ${SPAM_PORT} ]] && echo -e "\033[1;32m${Error} PORTA DE SPAM BLOQUEADA DETECTADA NAO HA NECESSIDADE DE BLOQUEAR NOVAMENTE !"
	s="A"
	Set_SPAM
	View_ALL
	echo -e "\033[1;32m${Info} PORTAS SPAM BLOQUEADAS !"
}
Ban_ALL(){
	check_BT
	check_SPAM
	s="A"
	if [[ -z ${BT_KEY_WORDS} ]]; then
		if [[ -z ${SPAM_PORT} ]]; then
			Set_ALL
			View_ALL
			echo -e "\033[1;32m${Info} TORRENTBLOQUEADOS, PALAVRAS-CHAVE E PORTAS SPAM !"
		else
			Set_BT
			View_ALL
			echo -e "\033[1;32m${Info} TORRENT BLOQUEADOS E PALAVRAS-CHAVE !"
		fi
	else
		if [[ -z ${SPAM_PORT} ]]; then
			Set_SPAM
			View_ALL
			echo -e "\033[1;32m${Info} PORTA SPAM (spam) PROIBIDA !"
		else
			echo -e "\033[1;32m${Error} PORTAS DE TORRENT, PALAVRAS-CHAVES E SPAM BLOQUEADAS, NAO HA há NECESSIDADE DE BANIR NOVAMENTE !"
		fi
	fi
}
UnBan_BT(){
	check_BT
	[[ -z ${BT_KEY_WORDS} ]] && echo -e "\033[1;32m${Error} TORRENT E PALAVRAS-CHAVE NAO BLOQUEADAS, VERIFIQUE !"
	s="D"
	Set_BT
	View_ALL
	echo -e "\033[1;32m${Info} TORRENT DESBLOQUEADOS E PALAVRAS-CHAVE !"
}
UnBan_SPAM(){
	check_SPAM
	[[ -z ${SPAM_PORT} ]] && echo -e "\033[1;32m${Error} PORTA SPAM NAO DETECTADA, VERIFIQUE !"
	s="D"
	Set_SPAM
	View_ALL
	echo -e "\033[1;32m${Info} PORTAS SPAM DESBLOQUEADAS !"
}
UnBan_ALL(){
	check_BT
	check_SPAM
	s="D"
	if [[ ! -z ${BT_KEY_WORDS} ]]; then
		if [[ ! -z ${SPAM_PORT} ]]; then
			Set_ALL
			View_ALL
			echo -e "\033[1;32m${Info} TORRENT, PALAVRAS-CHAVE E SPAM DESBLOQUEADAS !"
		else
			Set_BT
			View_ALL
			echo -e "\033[1;32m${Info} TORRENT, PALAVRAS-CHAVE DESBLOQUEADAS !"
		fi
	else
		if [[ ! -z ${SPAM_PORT} ]]; then
			Set_SPAM
			View_ALL
			echo -e "\033[1;32m${Info} PORTAS SPAM DESBLOQUEADAS !"
		else
			echo -e "\033[1;32m${Error} TORRENT NÃO DETECTADO, PALAVRAS-CHAVES E PORTAS DE SPAM BLOQUEADAS, VERIFIQUE !"
		fi
	fi
}
ENTER_Ban_KEY_WORDS_type(){
	Type=$1
	Type_1=$2
	if [[ $Type_1 != "ban_1" ]]; then
		echo -e "\033[1;34mPOR FAVOR SELECIONE UM TIPO DE ENTRADA:"
		echo ""	
echo -e "\033[1;32m1 - ENTRADA MANUAL (DIGITE UMA PLAVRA-CHAVE POR VEZ)"
echo ""
echo -e "\033[1;32m2 - LEITURA LOCAL DE ARQUIVOS (DIGITE UM NOME DO ARQUIVO POR VEZ)"
echo ""
 echo -e "\033[1;32m3 - LEITURA DE ENDERECO DE REDE (DIGITE UM ENDERECO DE REDE POR VEZ)"
 echo ""
		read -e -p "(POR PADRAO: 1 - ENTRADA MANUAL):" key_word_type
	fi
	[[ -z "${key_word_type}" ]] && key_word_type="1"
	if [[ ${key_word_type} == "1" ]]; then
		if [[ $Type == "ban" ]]; then
			ENTER_Ban_KEY_WORDS
		else
			ENTER_UnBan_KEY_WORDS
		fi
	elif [[ ${key_word_type} == "2" ]]; then
		ENTER_Ban_KEY_WORDS_file
	elif [[ ${key_word_type} == "3" ]]; then
		ENTER_Ban_KEY_WORDS_url
	else
		if [[ $Type == "ban" ]]; then
			ENTER_Ban_KEY_WORDS
		else
			ENTER_UnBan_KEY_WORDS
		fi
	fi
}
ENTER_Ban_PORT(){
	echo -e "\033[1;32mDIGITE A PORTA A SER BLOQUEADA: (SEGMENTO DE PORTA UNICA/ PORTA MULTIPLA / PORTA CONTINUA)"
	if [[ ${Ban_PORT_Type_1} != "1" ]]; then
	echo ""
	fi
	read -e -p "(ENTER CANCELA POR PADRAO):" PORT
	[[ -z "${PORT}" ]] && echo "CANCELADO..." && blocksh && exit 0
}
ENTER_Ban_KEY_WORDS(){
	echo -e "\033[1;32mDIGITE AS PALAVRAS-CHAVE A SEREM BANIDAS (NOME DE DOMINIO ETC, SUPORTA APENAS UMA UNICA PALAVRAS-CHAVE)"
	if [[ ${Type_1} != "ban_1" ]]; then
	echo ""
	fi
	read -e -p "(ENTER CANCELA POR PADRAO):" key_word
	[[ -z "${key_word}" ]] && echo "CANCELADO ..." && blocksh && exit 0
}
ENTER_Ban_KEY_WORDS_file(){
	echo -e "\033[1;32mDIGITE O NOME DO ARQUIVO LOCAL A SER BANIDO/DESBLOQUEADO (USE O CAMINHO ABSOLUTO)" && echo
	read -e -p "(O PADRAO E LER key_word.txt NO MESMO DIRETORIO QUE O SCRIPT):" key_word
	[[ -z "${key_word}" ]] && key_word="key_word.txt"
	if [[ -e "${key_word}" ]]; then
		key_word=$(cat "${key_word}")
		[[ -z ${key_word} ]] && echo -e "\033[1;32m${Error} O CONTEUDO DO ARQUIVO ESTA VAZINHO. !" && View_ALL && exit 0
	else
		echo -e "\033[1;32m${Error} ARQUIVO NAO ENCONTRADO ${key_word} !" && View_ALL && exit 0
	fi
}
ENTER_Ban_KEY_WORDS_url(){
	echo -e "\033[1;32mDIGITE O ENDERECO DO ARQUIVO DE REDE A SER BANIDO/DESBLOQUEADO (POR EXEMPLO, http: //xxx.xx/key_word.txt)" && echo
	read -e -p "(ENTER CANCELA POR PADRAO):" key_word
	[[ -z "${key_word}" ]] && echo "CANCELADO ..." && View_ALL && exit 0
	key_word=$(wget --no-check-certificate -t3 -T5 -qO- "${key_word}")
	[[ -z ${key_word} ]] && echo -e "\033[1;32m${Error} O CONTEUDO DO ARQUIVO DE REDE ESTA VAZIO OU O ACESSO EXPIROU !" && blocksh && exit 0
}
ENTER_UnBan_KEY_WORDS(){
	View_KEY_WORDS
	echo -e "\033[1;32mDIGITE A PALAVRA-CHAVE QUE DESEJA DESBLOQUEAR (DIGITE A PALAVRA-CHAVE COMPLETA E PRECISA ESTA DE ACORDO COM A LISTA ACIMA)" && echo
read -e -p "(ENTER CANCELA POR PADRAO):" key_word
	[[ -z "${key_word}" ]] && echo "CANCELADO ..." && blocksh && exit 0
}
ENTER_UnBan_PORT(){
	echo -e "\033[1;32mDIGITE A PORTA QUE DESEJA DESCOMPACTAR: (DIGITE A PORTA COMPLETA E PRECISA DE ACORDO COM A LISTA ACIMA, INCLUINDO VIRGULAS, DOIS PONTOS)" && echo
read -e -p "(ENTER CANCELA POR PADRAO):" PORT
	[[ -z "${PORT}" ]] && echo "CANCELADO ..." && blocksh && exit 0
}
Ban_PORT(){
	s="A"
	ENTER_Ban_PORT
	Set_PORT
	echo -e "\033[1;32m${Info} PORTA BLOQUEADA [ ${PORT} ] !\n"
	Ban_PORT_Type_1="1"
	while true
	do
		ENTER_Ban_PORT
		Set_PORT
		echo -e "\033[1;32m${Info} PORTA BLOQUEADA [ ${PORT} ] !\n"
	done
	View_ALL
}
Ban_KEY_WORDS(){
	s="A"
	ENTER_Ban_KEY_WORDS_type "ban"
	Set_KEY_WORDS
	echo -e "\033[1;32m${Info} PALAVRAS-CHAVE BLOQUEADAS [ ${key_word} ] !\n"
	while true
	do
		ENTER_Ban_KEY_WORDS_type "ban" "ban_1"
		Set_KEY_WORDS
		echo -e "\033[1;32m${Info} PALAVRAS-CHAVE BLOQUEADAS [ ${key_word} ] !\n"
	done
	View_ALL
}
UnBan_PORT(){
	s="D"
	View_PORT
	[[ -z ${Ban_PORT_list} ]] && echo -e "\033[1;32m${Error} QUALQUER PORTA NAO BLOQUEADA E DETECTADA !" && exit 0
	ENTER_UnBan_PORT
	Set_PORT
	echo -e "\033[1;32m${Info} PORTA DESENCAPSULADA [ ${PORT} ] !\n"
	while true
	do
		View_PORT
		[[ -z ${Ban_PORT_list} ]] && echo -e "\033[1;32m${Error} NENHUMA PORTA BLOQUEADA DETECTADA!"
		ENTER_UnBan_PORT
		Set_PORT
		echo -e "\033[1;32m${Info} PORTA DESENCAPSULADA [ ${PORT} ] !\n"
	done
	View_ALL
}
UnBan_KEY_WORDS(){
	s="D"
	Cat_KEY_WORDS
	[[ -z ${Ban_KEY_WORDS_list} ]] && echo -e "\033[1;32m${Error} NENHUMA FALHA DETECTADA !" && exit 0
	ENTER_Ban_KEY_WORDS_type "unban"
	Set_KEY_WORDS
	echo -e "\033[1;32m${Info} PALAVRAS-CHAVE DESBLOQUEADAS [ ${key_word} ] !\n"
	while true
	do
		Cat_KEY_WORDS
		[[ -z ${Ban_KEY_WORDS_list} ]] && echo -e "${Error} NENHUM BLOQUEIO DETECTADO !" 
		ENTER_Ban_KEY_WORDS_type "unban" "ban_1"
		Set_KEY_WORDS
		echo -e "\033[1;32m${Info} PALAVRAS-CHAVE DESBLOQUEADAS [ ${key_word} ] !\n"
	done
	View_ALL
}
UnBan_KEY_WORDS_ALL(){
	Cat_KEY_WORDS
	[[ -z ${Ban_KEY_WORDS_text} ]] && echo -e "\033[1;32m${Error} NENHUMA PALAVRAS-CHAVE DETECTADA, VERIFIQUE !"
	if [[ ! -z "${v6iptables}" ]]; then
		Ban_KEY_WORDS_v6_num=$(echo -e "${Ban_KEY_WORDS_v6_list}"|wc -l)
		for((integer = 1; integer <= ${Ban_KEY_WORDS_v6_num}; integer++))
			do
				${v6iptables} -t mangle -D OUTPUT 1
		done
	fi
	Ban_KEY_WORDS_num=$(echo -e "${Ban_KEY_WORDS_list}"|wc -l)
	for((integer = 1; integer <= ${Ban_KEY_WORDS_num}; integer++))
		do
			${v4iptables} -t mangle -D OUTPUT 1
	done
	Save_iptables_v4_v6
	View_ALL
	echo -e "\033[1;31m${Info} TODAS AS PALAVRAS-CHAVE FORAM DESBLOQUEADAS !"
}
check_iptables(){
	v4iptables=`iptables -V`
	v6iptables=`ip6tables -V`
	if [[ ! -z ${v4iptables} ]]; then
		v4iptables="iptables"
		if [[ ! -z ${v6iptables} ]]; then
			v6iptables="ip6tables"
		fi
	else
		echo -e "${Error} O firewall do iptables não está instalado! !
Por favor, instale o firewall iptables：
CentOS Sistema： yum install iptables -y
Debian / Ubuntu Sistema： apt-get install iptables -y"
	fi
}
check_sys
check_iptables
action=$1
if [[ ! -z $action ]]; then
	[[ $action = "banbt" ]] && Ban_BT && exit 0
	[[ $action = "banspam" ]] && Ban_SPAM && exit 0
	[[ $action = "banall" ]] && Ban_ALL && exit 0
	[[ $action = "unbanbt" ]] && UnBan_BT && exit 0
	[[ $action = "unbanspam" ]] && UnBan_SPAM && exit 0
	[[ $action = "unbanall" ]] && UnBan_ALL && exit 0
fi
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[44;1;93m     PAINEL DE FIREWALL SSH PRO MAX by: Elijahssh "
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
 echo -e "\033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mBLOQUEAR TORRENT, PALAVRAS-CHAVE\033[1;31m
[\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mBLOQUEAR PORTAS SPAM\033[1;31m
[\033[1;36m03\033[1;31m] \033[1;37m• \033[1;33mBLOQUEAR TORRENT, PALAVRAS-CHAVE + PORTAS SPAM\033[1;31m
[\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mBLOQUEAR PORTAS PERSONALIZADO \033[1;31m
[\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mBLOQUEAR PALAVRAS-CHAVE PERSONALIZADAS \033[1;31m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;31m[\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mDESBLOQUEAR TORRENT, PALAVRAS-CHAVE\033[1;31m
[\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mDESBLOQUEAR PORTAS SPAM \033[1;31m
[\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mDESBLOQUEAR TORRENT, PALAVRAS-CHAVE, PORTAS SPAM\033[1;31m
[\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mDESBLOQUEAR PORTAS PERSONALIZADO \033[1;31m
[\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mDESBLOQUEAR PALAVRAS-CHAVE PERSONALIZADAS \033[1;31m
[\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mDESBLOQUEAR TODAS AS PALAVRAS-CHAVE PERSONALIZADAS \033[1;31m
[\033[1;36m12\033[1;31m] \033[1;37m• \033[1;33mVER A LISTA REAL DE PROIBICOES \033[1;31m
[\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mSAIR \033[1;32m<\033[1;33m<\033[1;31m< \033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
 	echo ""
	tput civis
	echo -ne "\033[1;32mOQUE DESEJA FAZER \033[1;31m?\033[1;37m "
	read x
	tput cnorm
	clear
	case $x in
	1 | 01)
	Ban_BT
	echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	2 | 02)
	Ban_SPAM
	echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	3 | 03)
	Ban_ALL
	echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	4 | 04)
	Ban_PORT
	;;
	5 | 05)
	Ban_KEY_WORDS
	;;
	6 | 06)
	UnBan_BT
	echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	7 | 07)
	UnBan_SPAM
	echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	8 | 08)
	UnBan_ALL
    echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	9 | 09)
	UnBan_PORT
    echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	10 | 10)
	UnBan_KEY_WORDS
    echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	11 | 11)
	UnBan_KEY_WORDS_ALL
	echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	12 | 12)
	View_ALL
	echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
	blocksh
	;;
	0 | 00)
	echo -e "\033[1;31mSaindo...\033[0m"
	sleep 2
	clear
	menu
	;;
	*)
	echo "Por favor, digite um número correto [0-12]"
	;;
	esac
	}
	fun_conexao
}
